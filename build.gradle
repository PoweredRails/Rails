buildscript {
  repositories {
      jcenter()
  }
  dependencies {
      classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
      classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
  }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'license'
apply plugin: 'checkstyle'
apply plugin: 'com.github.johnrengelman.shadow'

defaultTasks 'build', 'licenseFormat', 'shadowJar'

group = 'org.poweredrails'
version = 'v0.1-development'
archivesBaseName = name.toLowerCase()

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenCentral()
  maven {
    name = 'sonatype-nexus'
    url = 'https://oss.sonatype.org/content/groups/public/'
  }
}

dependencies {
    // Logging
    compile 'org.slf4j:slf4j-log4j12:1.7.13'

    // Configuration
    compile 'ninja.leaping.configurate:configurate-hocon:3.0'
    compile 'ninja.leaping.configurate:configurate-gson:3.0'
    compile 'ninja.leaping.configurate:configurate-yaml:3.0'

    // Utilities
    compile 'org.json:json:20090211'
    compile 'com.google.guava:guava:18.0'
    compile 'io.netty:netty-all:4.0.33.Final'
    compile 'com.flowpowered:flow-math:1.0.2-SNAPSHOT'

    // Checkstyle
    checkstyle 'com.puppycrawl.tools:checkstyle:6.11.2'
}

configure([compileJava, compileTestJava]) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path']
    options.deprecation = true
    options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': "${System.properties['java.vm.version']} (${System.properties['java.vm.vendor']})",
                'Implementation-Description': name,
                'Implementation-Version': version,
                'Implementation-Vendor': url,
                'Main-Class': 'org.poweredrails.rails.Main'
    )
  }
}

task setSourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task setJavadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives setSourceJar
    archives setJavadocJar
}

task getWrapper(type: Wrapper) {
    gradleVersion = '2.8'
}

license {
    header file('HEADER.txt')
    include '**/*.java'

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

processResources {
    from 'LICENSE.txt'
}

checkstyle {
    toolVersion = "6.11.2"
    configFile = file('checkstyle.xml')
    configProperties = [
            'basedir': projectDir,
            'suppressions': file('checkstyle-suppressions.xml'),
            'severity': 'warning'
    ]
}
